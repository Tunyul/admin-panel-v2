@tailwind base;
@tailwind components;
@tailwind utilities;

/* Theme variables (fast swap by toggling `.dark` on <html>) */
:root {
  /* Friendly light theme palette (simple, warm, high legibility) */
  --bg: #fbf9f7;           /* warm cream background */
  --panel: #ffffff;        /* pure panel */

/* (moved .always-scroll to after global scrollbar rules) */
  --main-card-bg: #ffffff; /* cards white */
  --text: #0b2135;         /* dark navy for text - softer than pure black */
  --muted: #576a7a;        /* muted slate */
  --accent: #3b82f6;       /* bright blue accent */
  --accent-2: #ffd166;     /* warm yellow accent */
  --accent-rgb: 59,130,246;
  --accent-2-rgb: 255,209,102;
  /* semantic status colors */
  --status-success: #34d399; /* green - success */
  --status-warning: #fbbf24; /* amber/yellow - warning */
  --text-rgb: 11,33,53;
  --border-rgb: 230,238,246;
  --bg-rgb: 251,249,247;
  --border: #e6eef6;       /* very soft blueish border */
    --input-bg: #ffffff;     /* inputs background follows panel in light mode */
  --placeholder: #9fb0bd;  /* placeholder soft */
  --icon: #2b3b46;         /* icon color (slightly muted) */
  --gradient: linear-gradient(90deg, #fff8ec 0%, #eef6ff 100%); /* gentle warm -> cool */
  --button-text: #081423;  /* dark button text */
  --header-bg: rgba(var(--bg-rgb),0.06);
}
.dark {
  --bg: #0f1724;        /* neutral dark page background */
  /* Make panel match main-card-bg for consistent dark-mode surfaces */
  --panel: #0f1724;
  --main-card-bg: #0f1724;
  --text: #e6eef8;
  --muted: #93a3c0;
  --accent: #60a5fa;
  --accent-2: #fde047;
  /* semantic status colors for dark mode */
  --status-success: #34d399;
  --status-warning: #fbbf24;
  --border: #374151;
  --text-rgb: 230,238,248;
  --border-rgb: 55,65,81;
  --bg-rgb: 15,23,36;
  --input-bg: #232946;
  --placeholder: #9aa6bf;
  --icon: #cbd5e1;
    --gradient: linear-gradient(90deg, rgba(var(--bg-rgb),0.06) 0%, rgba(var(--accent-rgb),0.06) 100%); /* gentle gradient using tokens */
  --button-text: #0b1220;
    --header-bg: rgba(var(--bg-rgb),0.06);
}

body {
  background: var(--bg);
  min-height: 100vh;
  /* prevent horizontal page overflow while keeping vertical scroll */
  overflow-x: hidden;
  margin: 0;
  padding: 0;
}

/* Typography defaults */
body, input, textarea, button, select {
  color: var(--text);
  font-family: Inter, Poppins, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
}

/* Links and accent usage */
a { color: var(--accent); }

/* Forms */
input, textarea, select {
  background: var(--input-bg);
  color: var(--text);
  border: 1px solid var(--border);
  padding: 0.5rem 0.6rem;
  border-radius: 8px;
  outline: none;
}

input::placeholder, textarea::placeholder {
  color: var(--placeholder);
}

/* Buttons default neutral style â€” components may override */
button {
  background: var(--gradient);
  color: var(--button-text);
  border: 1px solid rgba(11,33,53,0.06);
  padding: 0.5rem 0.75rem;
  border-radius: 8px;
  cursor: pointer;
  box-shadow: 0 6px 18px rgba(11,33,53,0.06);
}

/* Icon default color - prefer MUI SvgIcon too */
svg { color: var(--icon); fill: currentColor; }
.MuiSvgIcon-root { color: var(--icon) !important; }
/* Ensure icons in buttons and lists inherit correctly */
.MuiButton-startIcon .MuiSvgIcon-root,
.MuiButton-endIcon .MuiSvgIcon-root,
.MuiListItemIcon-root .MuiSvgIcon-root {
  color: var(--icon) !important;
}

/* Typography: force MUI typography to follow tokens where possible */
.MuiTypography-root, .MuiInputBase-root, .MuiFormLabel-root {
  color: var(--text) !important;
}

/* Outlined input border color */
.MuiOutlinedInput-notchedOutline { border-color: var(--border) !important; }

/* Input background for MUI inputs */
.MuiInputBase-root { background: var(--input-bg) !important; }

/* Subtle gradients used in panels */
.panel-gradient { background: var(--gradient); }

/* Scrollbar styling (WebKit) */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-track {
  background: transparent;
}
::-webkit-scrollbar-thumb {
  background: linear-gradient(120deg, rgba(var(--accent-2-rgb),0.22), rgba(var(--accent-rgb),0.22));
  border-radius: 8px;
  box-shadow: 0 0 8px rgba(var(--text-rgb),0.06);
}

/* Light-mode specific subtle scrollbar track color */
html:not(.dark) ::-webkit-scrollbar-track {
  background: rgba(var(--bg-rgb),0.12);
}

/* Make MUI Paper and other cards follow CSS tokens where possible */
.MuiPaper-root, .card, .paper {
  background: var(--panel);
}

/* main-card explicitly follows main-card token to allow distinct surface control */
.main-card {
  background-color: var(--main-card-bg);
}


/* Use border-box sizing everywhere to avoid unexpected width/padding calculations */
*, *::before, *::after {
  box-sizing: border-box;
}

/* Make tables and their containers responsive so they don't overflow main content */
.table-responsive {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

/* make table wrappers use modal-style scrollbar by default */
.table-responsive, .table-responsive * {
  scrollbar-width: thin;
  scrollbar-color: var(--scroll-thumb-color) var(--scroll-track-color);
}
.table-responsive::-webkit-scrollbar { width: 10px; height: 10px; }
.table-responsive::-webkit-scrollbar-track { background: var(--scroll-track, transparent); }
.table-responsive::-webkit-scrollbar-thumb { background: var(--scroll-thumb); border-radius: 8px; box-shadow: 0 0 8px rgba(var(--text-rgb),0.06); }
.table-responsive::-webkit-scrollbar-thumb:hover { background: var(--scroll-thumb); }

/* Ensure table elements respect container width and wrap/flex where possible */
table {
  max-width: 100%;
  width: 100%;
  border-collapse: collapse;
  table-layout: auto; /* allow columns to size naturally, not fixed */
}

/* add some spacing under tables so they don't stick to the bottom */
.table-responsive + .table-bottom-space,
.table-bottom-space {
  height: 18px;
}

/* page fade and route transitions removed to make navigation instant */

/* Lottie loader overlay */
.lottie-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(15, 23, 42, 0.7);
  z-index: 2000;
}

.lottie-loader-box {
  width: 160px;
  height: 160px;
  border-radius: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(255,255,255,0.02));
  box-shadow: 0 8px 30px rgba(2,6,23,0.6);
}

/* Keep long text from overflowing cells */
th, td {
  word-break: break-word;
  white-space: normal;
  vertical-align: middle;
}

/* Add consistent bottom padding to table cells to improve vertical rhythm and readability.
   Use a modest value so compact tables aren't overly tall. Compact tables can override
   with a `.table-compact` class if needed. */
table tbody tr td, table thead tr th, .MuiTableCell-root {
  padding-bottom: 0.6rem;
}

/* Compact table variant - useful for dense lists or inventory tables */
.table-compact tbody tr td, .table-compact thead tr th, .table-compact .MuiTableCell-root {
  padding-bottom: 0.25rem;
}

/* Small tweak: when using a table inside a Paper or similar card, allow a subtle horizontal scroll */
.card .table-responsive, .paper .table-responsive {
  /* Removed inset shadow per request; keep a subtle outer shadow for separation */
  box-shadow: 0 6px 14px -10px rgba(2,6,23,0.12);
}

/* common main content card styling to match Orders visual (neon inset shadow) */
.main-card {
  background-color: var(--main-card-bg);
  border-radius: 1rem;
  padding: 1rem;
  /* Removed inset shadow to make elevation appear outward only */
  box-shadow: 0 6px 24px rgba(2,6,23,0.10);
  /* Theme-aware border: dark in light theme, light in dark theme */
  border: 1px solid rgba(var(--text-rgb), 0.14);
}

/* Force no extra bottom padding / unexpected height on main content cards */
.main-card {
  padding-bottom: 0 !important;
  overflow: visible !important;
  min-height: 0 !important;
  /* also ensure border remains consistent after layout changes */
  border: 1px solid rgba(var(--text-rgb), 0.14) !important;
}

/* Ensure inner responsive table wrapper doesn't create extra height */
.main-card .table-responsive {
  max-height: none !important;
}

/* Tables: use theme tokens for header, rows, borders */
table thead tr th {
  /* light mode: subtle translucent header to keep contrast without bright silver */
  background: rgba(var(--bg-rgb),0.06);
  color: var(--text);
  border-bottom: 1px solid var(--border);
}
.dark table thead tr th {
  /* dark mode: use token-based panel header to avoid hard-coded blue tint */
  background: linear-gradient(180deg, rgba(var(--bg-rgb),0.04), rgba(var(--bg-rgb),0.02));
  color: var(--text);
  border-bottom: 1px solid var(--border);
}

table tbody tr td {
  background: transparent;
  color: var(--text);
  border-bottom: 1px solid rgba(var(--border-rgb),0.18);
}
html.dark table tbody tr td {
  border-bottom: 1px solid rgba(var(--border-rgb),0.12);
}

table tbody tr:hover td {
  background: rgba(var(--accent-rgb),0.06);
}
html.dark table tbody tr:hover td {
  background: rgba(var(--accent-rgb),0.08);
}

/* Ensure header cells (thead/th) do not change on row hover or active states.
   Some components applied hover rules broadly to .MuiTableCell-root; make header cells
   visually stable by forcing their background to the header background and disabling
   hover transitions. */
table thead tr th, .MuiTableCell-head, .MuiTableCell-head * {
  background: inherit !important;
}
.MuiTableRow-root:hover .MuiTableCell-head, table tbody tr:hover th, table thead tr:hover th {
  background: inherit !important;
}

/* Also ensure the top header does not get a hover-induced box-shadow or transform */
.MuiTableCell-head {
  transition: none !important;
}

/* MUI table integrations: make headers and cells follow tokens */
.MuiTableCell-head {
  /* Use header token for consistent header background across themes */
  background: var(--header-bg) !important;
  color: var(--text) !important;
  border-bottom: 1px solid var(--border) !important;
}
.dark .MuiTableCell-head {
  /* In dark mode, header-bg will be set to a subtle translucent surface via :root/.dark */
  background: var(--header-bg) !important;
}

/* Orders table specific sticky header corrections for contrast in dark mode */
.orders-table .MuiTableCell-head {
  /* Orders table-specific header: use semantic header bg and muted text for chips legibility */
  background: var(--header-bg) !important;
  color: var(--muted) !important;
  z-index: 5;
}
.orders-table {
  background: transparent; /* orders-table container intentionally left transparent to allow parent card surface to show through */
}
.dark .orders-table .MuiTableCell-head {
  background: var(--header-bg) !important;
  color: var(--muted) !important;
  z-index: 5;
}
.MuiTableRow-root:hover .MuiTableCell-root {
  background: rgba(var(--accent-rgb),0.06) !important;
}

/* Ensure cards and MUI Paper respect dark-mode tokens and cannot be forced white by other rules */
.dark .main-card {
  background-color: var(--main-card-bg) !important;
}
.dark .MuiPaper-root:not(.public-invoice-paper) {
  background: var(--panel) !important;
}

/* Scoped override for public invoice paper: always light for printing/sharing */
.public-invoice-paper {
  background-color: #ffffff !important;
  color: #111827 !important;
}
.public-invoice-paper * { color: inherit !important; }

@media print {
  body { background: #ffffff !important; }
  .public-invoice-paper { box-shadow: none !important; border: none !important; }
}

/* Utility: always-show scrollbar for scrollable containers (WebKit + Firefox)
   Provides a wider, touch-friendly thumb and reserves gutter space so the
   scrollbar is easier to grab on touch/trackpad devices. */
.always-scroll {
  scrollbar-width: auto; /* Firefox: show a normal/large thumb */
  /* use theme-aware colors via CSS variables defined in :root/.dark */
  scrollbar-color: var(--scroll-thumb-color, rgba(0,0,0,0.18)) var(--scroll-track-color, transparent);
  -webkit-overflow-scrolling: touch;
  scrollbar-gutter: stable both-edges;
}
.always-scroll::-webkit-scrollbar {
  width: 16px;
  height: 16px;
}
.always-scroll::-webkit-scrollbar-track {
  background: var(--scroll-track, rgba(0,0,0,0.03));
  border-radius: 12px;
}
.always-scroll::-webkit-scrollbar-thumb {
  background: var(--scroll-thumb, rgba(255,255,255,0.14));
  border-radius: 10px;
  border: 4px solid transparent;
  background-clip: padding-box;
}
.always-scroll::-webkit-scrollbar-corner {
  background: transparent;
}

/* Theme tokens for scrollbars (fallbacks provided) */
:root {
  --scroll-track: rgba(251,249,247,0.12);
  --scroll-track-color: rgba(251,249,247,0.12);
  --scroll-thumb: linear-gradient(120deg, rgba(255,209,102,0.22), rgba(59,130,246,0.22));
  --scroll-thumb-color: rgba(11,33,53,0.18);
}
.dark {
  --scroll-track: rgba(255,255,255,0.02);
  --scroll-track-color: rgba(255,255,255,0.04);
  --scroll-thumb: linear-gradient(120deg, rgba(255,209,102,0.28), rgba(96,165,250,0.28));
  --scroll-thumb-color: rgba(255,255,255,0.14);
}

/* modal-scroll: utility to match DialogContent scrollbar used in Add Order modal (smaller thumb like modal) */
.modal-scroll {
  scrollbar-width: thin; /* Firefox: thin thumb */
  scrollbar-color: var(--scroll-thumb-color, rgba(0,0,0,0.18)) var(--scroll-track-color, transparent);
  -webkit-overflow-scrolling: touch;
}
.modal-scroll::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
.modal-scroll::-webkit-scrollbar-track { background: var(--scroll-track, transparent); }
.modal-scroll::-webkit-scrollbar-thumb {
  background: var(--scroll-thumb, linear-gradient(120deg, rgba(255,209,102,0.22), rgba(59,130,246,0.22)));
  border-radius: 8px;
  box-shadow: 0 0 8px rgba(var(--text-rgb),0.06);
}
.modal-scroll::-webkit-scrollbar-thumb:hover {
  background: var(--scroll-thumb, linear-gradient(120deg, rgba(255,209,102,0.36), rgba(59,130,246,0.36)));
}
